proxy-providers:
  CFWCloud:
    type: http
    interval: 3600
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 60
    proxy: direct
    url: "https://testingcf.jsdelivr.net/gh/soeton/subscribe/CFWCloud"
  LOCCloud:
    type: http
    interval: 3600
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 60
    proxy: direct
    url: "https://testingcf.jsdelivr.net/gh/soeton/subscribe/LOCCloud"
  SSRCloud:
    type: http
    interval: 3600
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 60
    proxy: direct
    url: "https://testingcf.jsdelivr.net/gh/soeton/subscribe/SSRCloud"

allow-lan: true
bind-address: "*"
lan-allowed-ips:
  - 0.0.0.0/0
  - ::/0
skip-auth-prefixes:
  - 127.0.0.1/8
  - ::1/128
mode: rule
log-level: info
ipv6: false
find-process-mode: off
keep-alive-idle: 600
keep-alive-interval: 30
profile:
  store-selected: true
  store-fake-ip: true
unified-delay: true
tcp-concurrent: true
global-client-fingerprint: chrome

port: 8080
socks-port: 1080
mixed-port: 7890
redir-port: 7891
tproxy-port: 7892
global-ua: clash.meta
etag-support: true
geodata-mode: false
geodata-loader: memconservative
geo-auto-update: false
geo-update-interval: 24
geox-url:
  geoip: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.dat"
  geosite: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geosite.dat"
  mmdb: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.metadb"

external-controller: 0.0.0.0:9090
secret: "nikki"
external-ui: ui
external-ui-name: "Zashboard"
external-ui-url: https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip

sniffer:
  enable: true
  parse-pure-ip: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  skip-domain:
    - "Mijia Cloud"
    - "+.push.apple.com"
    
dns:
  enable: true
  ipv6: false
  listen: 0.0.0.0:1053
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  prefer-h3: true
  use-system-hosts: false
  use-hosts: false
  respect-rules: false
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - rule-set:fakeip-filter,private_domain,cn_domain
  nameserver:
    - https://doh.pub/dns-query
    - https://dns.alidns.com/dns-query
  direct-nameserver:
    - https://doh.pub/dns-query
    - https://dns.alidns.com/dns-query

tun:
  enable: true
  interface-name: "nikki"
  stack: system
  dns-hijack:
    - "any:53"
    - "tcp://any:53"
  auto-route: false
  auto-redirect: false
  auto-detect-interface: false
  mtu: 9000
  gso: true
  gso-max-size: 65536
  endpoint-independent-nat: false
  device: nikki
authentication:
  - nikki:dashboard
  
proxies:
  - name: "direct"
    type: direct
    udp: true
pr: &pr {type: select, proxies: [proxy, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇺🇸 美国节点, 🇯🇵 日本节点, 🇩🇪 德国节点, 🇳🇱 荷兰节点, 🌐 全部节点, direct]}

proxy-groups:
  - {name: proxy, type: select, proxies: [🇭🇰 香港节点, 🇨🇳 台湾节点, 🇺🇸 美国节点, 🇯🇵 日本节点, 🇩🇪 德国节点, 🇳🇱 荷兰节点, 🌐 全部节点, direct],icon: https://raw.githubusercontent.com/sunfing/iNg/main/Icons/GeneralIcons/ClashMeta.png}
  - {name: Google,!!merge <<: *pr,icon: https://raw.githubusercontent.com/sunfing/iNg/main/Icons/GeneralIcons/Google.png}
  - {name: OpenAi,!!merge <<: *pr,icon: https://raw.githubusercontent.com/sunfing/iNg/main/Icons/GeneralIcons/Copilot.png}
  - {name: TikTok,!!merge <<: *pr,icon: https://raw.githubusercontent.com/sunfing/iNg/main/Icons/GeneralIcons/TikTok.png}
  - {name: Disney,!!merge <<: *pr,icon: https://raw.githubusercontent.com/sunfing/iNg/main/Icons/GeneralIcons/Netflix.png}
  - {name: Netflix,!!merge <<: *pr,icon: https://raw.githubusercontent.com/sunfing/iNg/main/Icons/GeneralIcons/Disney+.png}
  - {name: Telegram,!!merge <<: *pr,icon: https://raw.githubusercontent.com/sunfing/iNg/main/Icons/GeneralIcons/Telegram.png}
  - {name: 🚧 兜底,!!merge <<: *pr}
  - {name: 🇭🇰 香港节点, type: select, include-all: true, filter: "(?i)港|hk|hongkong"}
  - {name: 🇨🇳 台湾节点, type: select, include-all: true, filter: "(?i)台|tw|taiwan"}
  - {name: 🇯🇵 日本节点, type: select, include-all: true, filter: "(?i)日|jp|japan"}
  - {name: 🇺🇸 美国节点, type: select, include-all: true, filter: "(?i)美|us|unitedstates"}
  - {name: 🇩🇪 德国节点, type: select, include-all: true, filter: "(?i)德|de|Deutschland"}
  - {name: 🇳🇱 荷兰节点, type: select, include-all: true, filter: "(?i)荷|nl|Nederland"}
  - {name: 🌐 全部节点, type: select, include-all: true}
  
rules:
  - RULE-SET,private_domain,direct
  - RULE-SET,openai,OpenAi
  - RULE-SET,tiktok_domain,TikTok
  - RULE-SET,disney_domain,Disney
  - RULE-SET,netflix_domain,Netflix
  - RULE-SET,telegram_domain,Telegram
  - RULE-SET,google_domain,Google
  - RULE-SET,rule-direct_domain,direct
  - RULE-SET,geolocation-!cn,proxy
  - RULE-SET,rule-proxy_domain,proxy
  - RULE-SET,cn_domain,direct
  - RULE-SET,netflix_ip,Netflix,no-resolve
  - RULE-SET,telegram_ip,Telegram,no-resolve
  - RULE-SET,google_ip,Google,no-resolve
  - RULE-SET,private_ip,direct,no-resolve
  - RULE-SET,cn_ip,direct
  - MATCH,🚧 兜底

rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  list: &list {type: http, interval: 86400, behavior: domain, format: text}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}
rule-providers:
  cn_domain:
    !!merge <<: *domain
    url: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@meta/geo/geosite/cn.mrs"
  private_domain:
    !!merge <<: *domain
    url: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@meta/geo/geosite/private.mrs"
  rule-direct_domain:
    !!merge <<: *list
    url: "https://testingcf.jsdelivr.net/gh/Maple-Ling/maple@main/Mihomo/rule-direct.list"
  rule-proxy_domain:
    !!merge <<: *list
    url: "https://testingcf.jsdelivr.net/gh/Maple-Ling/maple@main/Mihomo/rule-proxy.list"
  openai:
    !!merge <<: *domain
    url: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@meta/geo/geosite/openai.mrs"
  google_domain:
    !!merge <<: *domain
    url: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@meta/geo/geosite/google.mrs"
  tiktok_domain:
    !!merge <<: *domain
    url: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@meta/geo/geosite/tiktok.mrs"
  disney_domain:
    !!merge <<: *domain
    url: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@meta/geo/geosite/disney.mrs"
  netflix_domain:
    !!merge <<: *domain
    url: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@meta/geo/geosite/netflix.mrs"
  telegram_domain:
    !!merge <<: *domain
    url: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@meta/geo/geosite/telegram.mrs"
  geolocation-!cn:
    !!merge <<: *domain
    url: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@meta/geo/geosite/geolocation-!cn.mrs"
  fakeip-filter:
    !!merge <<: *domain
    url: "https://testingcf.jsdelivr.net/gh/DustinWin/ruleset_geodata@mihomo-ruleset/fakeip-filter.mrs"   
  cn_ip:
    !!merge <<: *ip
    url: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@meta/geo/geoip/cn.mrs"
  private_ip:
    !!merge <<: *ip
    url: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@meta/geo/geoip/private.mrs"
  google_ip:
    !!merge <<: *ip
    url: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@meta/geo/geoip/google.mrs"
  netflix_ip:
    !!merge <<: *ip
    url: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@meta/geo/geoip/netflix.mrs"
  telegram_ip:
    !!merge <<: *ip
    url: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@meta/geo/geoip/telegram.mrs"
